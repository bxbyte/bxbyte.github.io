---
import type { HTMLAttributes } from "astro/types"

type Props<T extends "input" | "textarea" = "input"> = HTMLAttributes<T> & {
	el?: T
	name?: string
	placeholder?: string
}

const { el: Element = "input", name, placeholder, ...props } = Astro.props
---

<div>
	<Element
		{...props}
		class={props.class}
		id={name}
		name={name}
		placeholder=""
	/>
	<label for={name}>{placeholder}</label>
</div>

<style lang="scss">
	[class*="astro-"] {
		$label-size: 0.8em;
		$input-padding: 0.5em;

		position: relative;

		&:not(:has(*:placeholder-shown)) label,
		&:has(*:focus) label {
			top: $input-padding;
			// opacity: 0.8;
			font-size: $label-size;
		}

		label {
			position: absolute;
			top: calc($input-padding + $label-size / 2);
			left: $input-padding;
			// opacity: 0.5;
			transition: 0.1s ease-in-out;
			transition-property: top, left, opacity, font-size;
			width: fit-content;
			pointer-events: none;
			color: color-mix(in srgb, theme.$color-grey, theme.$color-black 70%);
		}

		input,
		textarea {
			border: 1px solid theme.$color-grey;
			border-radius: 0.2em;
			padding: calc($label-size + $input-padding) $input-padding
				$input-padding $input-padding;
			width: calc(100% - $input-padding * 2);
		}
	}
</style>
