---
import { Icon } from "astro-icon/components"
import { Main } from "@/layouts"
import PDF from "@/modules/html2pdf/print"
import pdfSkin from "@/styles/pdf/skin.module.scss"
import { join } from "@/libs/ui/client"
import { md } from "@/modules/composer/server"
import { useLocaleContents } from "@/modules/i18n/content"
import { PatternGrid, Timeline } from "@/components"

import { type JobProps, getJobs } from "@/content"

interface Props {
	job: JobProps
}

export const { getStaticPaths } = useLocaleContents(
	{},
	async (): Promise<{ params: { id: string }; props: { job: JobProps } }[]> =>
	(await getJobs()).map((job) => ({
			params: { id: job.id },
			props: { job },
		}))
		
)

const { job } = Astro.props
---

<Main>
	<div id="pdf">
		<PDF targetSelector="#pdf" size="a4" scale={5} authors={job.me.name}>
			<section id="cv" class={pdfSkin.fullOutline}>
				<section id="picture" aria-flowto="header">
					<PatternGrid
						style="position:absolute;align-self: end; width: 100%; height: 100%"
						width={3}
						height={3}
						seed="sdf"
					/>
					<img src={job.me.img} alt="" />
				</section>
				<section
					id="header"
					aria-flowto="leftbar"
					style="display: flex;flex-direction: column;gap: .5em;"
				>
					<h1>{job.me.name}</h1>
					<h2>{job.cv.object}</h2>
					<Fragment set:html={md(job.cv.description)} />
				</section>
				<section
					id="leftbar"
					aria-flowto="content"
					style="overflow: hidden;"
				>
					<section>
						<h2>Coordonées</h2>
						<ul id="contacts">
							{
								job.me.contacts.map(({ icon, value, link }) => (
									<li>
										<a href={link}>
											<Icon
												name={icon}
												aria-hidden="true"
											/>{" "}
											{value}
										</a>
									</li>
								))
							}
						</ul>
					</section>
					<section id="tools">
						<h2>Compétences techniques</h2>
						{
							job.cv.techs.map((techs) => (
								<ul>
									{techs.map((tech) => (
										<li>{tech}</li>
									))}
								</ul>
							))
						}
					</section>
					<section>
						<h2>Centres d'intérêt</h2>
						{join(job.me.interests)}
					</section>
				</section>
				<div id="content">
					<section id="skills">
						<h2>Compétences</h2>
						<div>
							{
								job.cv.skills.map((skills) => (
									<ul>
										{skills.map((skill) => (
											<li>{skill}</li>
										))}
									</ul>
								))
							}
						</div>
					</section>
					<section>
						<h2>Diplômes</h2>
						<Timeline
							items={job.cv.diplomas}
							style="gap: 1em;--pad-left:.85em;margin-left:calc(1px - .225em);"
						/>
					</section>
					<section>
						<h2>Projets relevants</h2>
						<Timeline
							items={job.cv.experiences}
							style="gap: 1em;--pad-left:.85em;margin-left:calc(1px - .225em);"
						/>
					</section>
				</div>
			</section>
			{
				job.letter && (
					<div id="letter" class={pdfSkin.full}>
						<section id="me">
							<ul>
								<li>
									<strong>{job.me.name}</strong>
								</li>
								<li>{job.me.address}</li>
								<li>{job.me.city}</li>
								<li>
									<a href={job.me.tel.link}>
										{job.me.tel.value}
									</a>
								</li>
								<li>
									<a href={job.me.email.link}>
										{job.me.email.value}
									</a>
								</li>
							</ul>
						</section>
						<section id="coorp">
							<div>
								<ul>
									<li>
										<strong>{job.letter.coorp.name}</strong>
									</li>
									<li>{job.letter.coorp.location}</li>
								</ul>
								<img src={job.letter.coorp.logo} />
							</div>
							{job.letter.coorp.resp && (
								<p>À destination de {job.letter.coorp.resp}</p>
							)}
						</section>
						<p id="when">
							Fait à {job.letter.from}, le
							<time datetime={new Date().toISOString()}>
								{new Date().toLocaleDateString("fr", {
									year: "numeric",
									month: "2-digit",
									day: "numeric",
								})}
							</time>
						</p>
						<p id="obj">
							<strong>Objet: {job.letter.object}</strong>
						</p>
						<div id="text">
							<Fragment set:html={md(job.letter.content)} />
						</div>
						<section id="signature">
							<p>{job.me.name}</p>
							<img />
						</section>
					</div>
				)
			}
		</PDF>
	</div>
</Main>

<style lang="scss">
	/// Global styling

	@page {
		margin: 0.5in;
		background-color: theme.$color-white;
		padding: 1em;
		font-size: 11pt;
	}

	@media screen, pagedjs-ignore {
		:global(.pagedjs_pages) {
			display: flex;
			flex-flow: row wrap;
			justify-content: center;
			align-items: center;
			gap: 2em;
			padding: 2em;
		}

		:global(.pagedjs_page) {
			border: 1px solid theme.$color-grey;
		}
	}
</style>

<style lang="scss">
	///CV styling

	$border-radius: 1em;
	$border-padding: 1em;
	$border: 1px solid theme.$color-grey;
	$grid-rows: 13em auto;
	$grid-cols: 13em auto;

	#cv {
		display: grid;
		grid-template-rows: $grid-rows;
		grid-template-columns: $grid-cols;
		gap: $border-padding * 2;
		height: 100%;

		& > * {
			display: flex;
			flex-direction: column;
		}

		section {
			display: flex;
			flex-direction: column;
			gap: 0.5em;

			h2 {
				font-size: 1.3em;
			}
		}

		#header {
			gap: 1em;

			h1 {
				font-size: 2em;
			}
		}

		#leftbar {
			gap: 2em;
			height: 100%;

			svg {
				width: 100%;
				height: 2em;
			}
		}

		#picture,
		#content {
			position: relative;
			&::after {
				position: absolute;
				z-index: -1;
				width: 100%;
				height: 100%;
				content: "";
			}
		}

		#picture::after {
			right: -1 * $border-padding;
			bottom: -1 * $border-padding;
			border-right: $border;
			border-bottom: $border;
			border-bottom-right-radius: $border-radius;
			padding-right: $border-padding;
			padding-bottom: $border-padding;
		}

		#content::after {
			top: -1 * $border-padding;
			left: -1 * $border-padding;
			border-top: $border;
			border-left: $border;
			border-top-left-radius: $border-radius;
			padding-top: 2 * $border-padding;
			padding-left: $border-padding;
		}

		#picture {
			display: grid;
			grid-area: a;

			& > * {
				grid-area: a;
				filter: grayscale(1);
				border-radius: calc($border-radius - $border-padding / 2);
				width: 100%;
				height: 100%;
				object-fit: cover;
			}
		}

		#content {
			display: flex;
			flex: 1;
			gap: 2em;

			:global(strong) {
				font-weight: inherit;
				text-decoration: underline 1px solid currentColor;
				text-underline-offset: 0.2em;
			}
		}

		#contacts {
			display: flex;
			flex-direction: column;
			gap: 0.2em;

			svg {
				width: 1em;
				height: 1em;
			}

			li a {
				display: inline-flex;
				align-items: center;
				gap: 0.5em;
				margin-left: 0.25em;
			}
		}

		#tools {
			display: flex;
			flex-direction: column;
			gap: 0.5em;

			ul {
				display: flex;
				flex-direction: column;
			}

			li {
				margin-left: 1.25em;
				padding-left: 0.25em;
				list-style: disc;
			}
		}

		#skills div {
			display: flex;
			flex-direction: column;
			gap: 0.8em;
			// columns: 2;

			li {
				margin-left: 1.25em;
				padding-left: 0.25em;
				list-style: disc;
			}
		}
	}
</style>

<style lang="scss">
	/// Letter styling

	#letter {
		display: flex;
		flex-direction: column;
		gap: 2em;

		#coorp {
			display: flex;
			flex-direction: column;
			align-items: end;
			gap: 2em;

			div {
				display: flex;
				grid-template-columns: auto auto;
				gap: 1em;

				img {
					$n-lines: 2;
					height: calc($n-lines * 1.2em);
				}
			}
		}

		#coorp,
		#when {
			align-self: flex-end;
			text-align: end;
		}

		#text {
			display: flex;
			flex-direction: column;
			gap: 1.5em;

			:global(a) {
				text-decoration: underline 1px solid currentColor;
				text-underline-offset: 0.2em;
			}
		}
	}
</style>
