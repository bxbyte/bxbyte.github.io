---
import { Button, Field } from "@/components"
import locales from "./locales"
import { getLocaleContent } from "@/modules/i18n/content"

const content = getLocaleContent(locales, Astro)
---

<script>
	import { FORMSPREE_ID } from "astro:env/client"

	class ContactForm extends HTMLFormElement {
		connectedCallback() {
			this.addEventListener("submit", async () => {
				await fetch(`https://formspree.io/f/${FORMSPREE_ID}`, {
					method: "POST",
					headers: {
						"Content-Type": "application/json",
						Accept: "application/json",
					},
					body: JSON.stringify(
						Object.fromEntries(new FormData(this))
					),
				})
			})
		}
	}

	customElements.define("contact-form", ContactForm, { extends: "form" })
</script>

<form is="contact-form" onsubmit="return false">
	<fieldset>
		<Field name="name" required placeholder={content.form.name} />
		<Field name="email" type="email" required placeholder={content.form.email} />
	</fieldset>
	<Field name="subject" required placeholder={content.form.subject} />
	<Field
		el="textarea"
		name="message"
		required
		placeholder={content.form.message}
		rows="8"
	/>
	<fieldset>
		<Button type="submit">{content.form.send}</Button>
		<Button variant="secondary" type="reset">{content.form.clear}</Button>
	</fieldset>
</form>

<style lang="scss">
	form {
		display: flex;
		flex-direction: column;
		gap: 1em;

		& > fieldset {
			display: flex;
			flex-flow: row wrap;
			gap: 1em;

			&:global(>div) {
				
				&:has([name="name"]) {
					flex-grow: 1;
					width: 16ch;
				}

				&:not(:has([name="name"])) {
					flex-grow: 2;
				}
			}
		}

		textarea {
			resize: none;
		}
	}
</style>
