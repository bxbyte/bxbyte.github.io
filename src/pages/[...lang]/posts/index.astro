---
import Main from '@/layouts/Main'
import layoutStyles from '@/styles/layout.module.scss'
import { getPostsByLocale } from '@/content'
import locals from './_locales'
import { useLocaleContents } from '@/libs/i18n'
import PostCard from '@/components/postcard'

export const { getStaticPaths, getLocaleContent } = useLocaleContents(locals)
const content = getLocaleContent(Astro)

const posts = (await getPostsByLocale())[Astro.currentLocale as Locales]

function formatDate(date: Date) {
	return date.toLocaleDateString(Astro.currentLocale, {
		month: 'long',
		year: 'numeric',
	})
}

const postsPerMonth = Object.groupBy(posts, ({ data: { date } }) =>
	formatDate(date),
) as Record<string, typeof posts>
---

<Main class={layoutStyles.chunk}>
	<ul class="timeline">
		{
			Object.entries(postsPerMonth)
				.map(
					([month, posts]) => [new Date(month), posts] as [Date, typeof posts],
				)
				.sort(([a], [b]) => b.getTime() - a.getTime())
				.map(([month, posts]) => (
					<Fragment>
						<li>
							<time datetime={month.toISOString()}>{formatDate(month)}</time>
						</li>
						<ul>
							{posts.map((post) => (
								<li>
									<PostCard post={post} />
								</li>
							))}
						</ul>
					</Fragment>
				))
		}
	</ul>
</Main>

<style lang="scss">
	.timeline {
		display: flex;
		flex-direction: column;
		gap: 2em;

		ul {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(16em, 1fr));
			grid-auto-rows: minmax(16em, 1fr);
			gap: 2em;
		}

		li:has(time) {
			font-size: 2em;
			text-decoration: underline 1px solid currentColor;
			text-underline-offset: 0.2em;
			text-transform: capitalize;
		}

		li {
			// display: block;
			break-inside: avoid;
		}
	}
</style>
