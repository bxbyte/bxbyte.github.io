---
import type { HTMLAttributes } from 'astro/types'
import ActiveLink from './ActiveLink.astro'

interface Props extends HTMLAttributes<'nav'> {
	path?: string
	displayPath?: string
}

let { path = Astro.url.pathname, displayPath, ...props } = Astro.props
displayPath ||= path

let pathChunk = path.split('/').filter(Boolean),
	displayPathChunk = displayPath.split('/').filter(Boolean)

// Remove local
if (pathChunk.at(0) == Astro.currentLocale) {
	pathChunk.splice(0, 1)
	displayPathChunk.splice(0, 1)
}

if (pathChunk.length != displayPathChunk.length)
	throw new Error(
		`Display path and real path are not equals:\n\t${pathChunk} \n\t${displayPathChunk}`,
	)
---

<nav {...props}>
	<ul>
		<li>
			<ActiveLink href="/" relation="abs">home</ActiveLink>
		</li>
		{
			displayPathChunk.map((location, i) => (
				<li>
					<ActiveLink
						relation="abs"
						href={'/' + pathChunk.slice(0, i + 1).join('/')}
					>
						{location}
					</ActiveLink>
				</li>
			))
		}
	</ul>
</nav>

<style lang="scss">
	@use '@/styles/skin.module.scss';

	ul {
		$gap: 0.5em;
		color: theme.$color-black;
		@extend .smallCaps;

		&,
		li {
			display: inline-flex;
			gap: $gap;
		}

		li {
			position: relative;
			margin-right: calc($gap + 1ch);

			&:not(:last-child):after {
				position: absolute;
				left: calc(100% + $gap);
				content: '>';
			}
		}
	}
</style>
