name: Build & publish Next.js site to Github Pages

on:
  # Run on pushes from other repo
  repository_dispatch:
  # Manually run from the Actions tab
  workflow_dispatch:

# Environment variables
env:
  websitePath: src/website
  commitMsg: Publishing update

# Allow only one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  # Assembling repositery
  assemble:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      workingPath: ${{ steps.dir.outputs.workingPath }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: Update git submodules
        working-directory:
        run: |
          git submodule update --force --recursive --init --remote

      - name: Create & set .env for build in ${{ env.websitePath }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo REPOSITERY_PAGE="$(gh api 'repos/${{ github.repository }}/pages' --jq '.html_url')" >> ${{ env.websitePath }}/.env
          echo REPOSITERY_URL="${{ github.repository }}" >> ${{ env.websitePath }}/.env
          echo REPOSITERY_OWNER="${{ github.repository_owner }}" >> ${{ env.websitePath }}/.env
          echo SERVER_URL="${{ github.server_url }}" >> ${{ env.websitePath }}/.env

      - name: Set absolute working directory path
        id: dir
        run: |
          echo "workingPath=$(pwd)" >> $GITHUB_OUTPUT

      - name: List working directory
        run: |
          echo Working directory : ${{ steps.dir.outputs.workingPath }}
          echo Content :
          tree

      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: '.'
          path: ${{ steps.dir.outputs.workingPath }}
          overwrite: true
          retention-days: 1 # Keep artifacts for only a day
          compression-level: 9

  # Building website
  build:
    runs-on: ubuntu-latest
    needs: assemble
    defaults:
      run:
        working-directory: ${{ env.websitePath }}
    steps:
      - name: Restore artifacts
        uses: actions/download-artifact@main
        with:
          name: '.'
          path: ${{ needs.assemble.outputs.workingPath }}

      - name: Set absolute working directory path
        id: dir
        run: |
          echo "working=$(pwd)" >> $GITHUB_OUTPUT

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-

      - name: Install dependencies
        run: bun install --ci

      - name: Pre-build
        run: bun run pre-build

      - name: Build
        run: bun run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.dir.outputs.working }}/out

  # Publishing website
  publish:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Update repositery if needed
  update:
    runs-on: ubuntu-latest
    needs:
      - assemble
      - publish
    permissions:
      contents: write
      # pull-requests: write
    steps:
      - name: Restore artifacts
        uses: actions/download-artifact@main
        with:
          name: '.'
          path: ${{ needs.assemble.outputs.workingPath }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup git
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"

      - name: Commit & push to repositery
        run: |
          git add .
          git commit -m '${{ env.commitMsg }}' || echo No update needed.
          git push origin ${{ github.ref_name }}
